package com.example.myapplication;
import androidx.core.content.ContextCompat;
import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import com.squareup.picasso.Picasso;
import java.util.List;
import android.util.Log;
import java.util.ArrayList;
import com.squareup.picasso.Callback;
import com.squareup.picasso.MemoryPolicy;
import com.squareup.picasso.NetworkPolicy;
import android.content.Intent;

import retrofit2.Call;
import retrofit2.Response;

public class UserAdapter extends RecyclerView.Adapter<UserAdapter.UserViewHolder> {
    private List<User> userList;
    private Context context;

    public UserAdapter(List<User> userList, Context context) {
        this.userList = userList;
        this.context = context;
    }

    @NonNull
    @Override
    public UserViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_user, parent, false);
        return new UserViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull UserViewHolder holder, int position) {
        User user = userList.get(position);

        // üìù Log th√¥ng tin user ƒë·ªÉ ki·ªÉm tra
        Log.d("USER_ADAPTER", "ƒêang hi·ªÉn th·ªã user: " + user.getUsername() + " - V·ªã tr√≠: " + position);

        // üñãÔ∏è Hi·ªÉn th·ªã t√™n user
        holder.userName.setText(user.getUsername());

        // üñºÔ∏è Ki·ªÉm tra danh s√°ch ·∫£nh v√† l·∫•y ·∫£nh ƒë·∫ßu ti√™n
        if (user.getImagePaths() != null && !user.getImagePaths().isEmpty()) {
            String baseUrl = "http://192.168.137.88/";  // URL g·ªëc c·ªßa m√°y ch·ªß Apache
            String imagePath = user.getImagePaths().get(0);

            // üõ†Ô∏è Ki·ªÉm tra v√† ƒëi·ªÅu ch·ªânh ƒë∆∞·ªùng d·∫´n ·∫£nh
            String imageUrl;
            if (imagePath.startsWith("dataset/")) {
                imageUrl = baseUrl + imagePath;
            } else {
                imageUrl = baseUrl + "dataset/" + imagePath;
            }

            // üìù Log URL ·∫£nh ƒë·ªÉ ki·ªÉm tra
            Log.d("USER_ADAPTER", "·∫¢nh c·ªßa " + user.getUsername() + ": " + imageUrl);

            // üñºÔ∏è T·∫£i ·∫£nh b·∫±ng Picasso
            Picasso.get()
                    .load(imageUrl)
                    .networkPolicy(NetworkPolicy.NO_CACHE, NetworkPolicy.NO_STORE) // Kh√¥ng d√πng cache
                    .memoryPolicy(MemoryPolicy.NO_CACHE, MemoryPolicy.NO_STORE) // X√≥a cache b·ªô nh·ªõ
                    .placeholder(R.drawable.ic_user) // ·∫¢nh m·∫∑c ƒë·ªãnh khi ƒëang t·∫£i
                    .error(R.drawable.ic_user) // ·∫¢nh l·ªói
                    .into(holder.userImage, new Callback() { // üî• ƒê·∫∑t Callback v√†o ƒë√¢y
                        @Override
                        public void onSuccess() {
                            Log.d("PICASSO", "‚úÖ T·∫£i ·∫£nh th√†nh c√¥ng: " + imageUrl);
                        }

                        @Override
                        public void onError(Exception e) {
                            Log.e("PICASSO", "‚ùå L·ªói t·∫£i ·∫£nh: " + imageUrl, e);
                        }
                    });

        } else {
            // N·∫øu kh√¥ng c√≥ ·∫£nh, hi·ªÉn th·ªã ·∫£nh m·∫∑c ƒë·ªãnh
            holder.userImage.setImageResource(R.drawable.ic_user);
        }

        // üîç Hi·ªÉn th·ªã tr·∫°ng th√°i v√¢n tay
        if (user.getFingerprintId() != null && !user.getFingerprintId().isEmpty()) {
            holder.fingerprintStatus.setText("V√¢n tay ƒë√£ ƒëƒÉng k√Ω");
            holder.fingerprintStatus.setTextColor(ContextCompat.getColor(context, R.color.green));
        } else {
            holder.fingerprintStatus.setText("V√¢n tay: Ch∆∞a ƒëƒÉng k√Ω");
            holder.fingerprintStatus.setTextColor(ContextCompat.getColor(context, R.color.red));
        }

        // üñ±Ô∏è **B·∫Øt s·ª± ki·ªán click ƒë·ªÉ m·ªü chi ti·∫øt user**
        holder.itemView.setOnClickListener(v -> {
            Intent intent = new Intent(context, UserDetailActivity.class);
            intent.putExtra("user_data", user);  // ‚úÖ Truy·ªÅn user qua Intent
            context.startActivity(intent);
        });
    }

    @Override
    public int getItemCount() {
        Log.d("USER_ADAPTER", "S·ªë l∆∞·ª£ng user trong adapter: " + (userList != null ? userList.size() : 0));
        return userList != null ? userList.size() : 0;
    }



    public static class UserViewHolder extends RecyclerView.ViewHolder {
        TextView userName;
        ImageView userImage;
        TextView fingerprintStatus;  // Th√™m TextView ƒë·ªÉ hi·ªÉn th·ªã v√¢n tay

        public UserViewHolder(@NonNull View itemView) {
            super(itemView);
            userName = itemView.findViewById(R.id.textViewUsername);
            userImage = itemView.findViewById(R.id.imageViewUser);
            fingerprintStatus = itemView.findViewById(R.id.textViewFingerprintStatus); // √Ånh x·∫° TextView hi·ªÉn th·ªã v√¢n tay
        }
    }
    public void updateUsers(List<User> newUsers) {
        userList.clear();
        userList.addAll(newUsers);
        notifyDataSetChanged();  // üî• C·∫≠p nh·∫≠t giao di·ªán
    }



}
